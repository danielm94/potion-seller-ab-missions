namespace = wallachia_hre_events
#Initial event to set the incident
country_event = {
	id = wallachia_hre_events.0
	title = EMPTY_TOOLTIP
	desc = EMPTY_TOOLTIP
	picture = AB_BATTLE_eventPicture
	is_triggered_only = yes
	hidden = yes
	option = {
		name = EMPTY_TOOLTIP
		set_imperial_incident = incident_emperor_deposed
	}
}

country_event = {
	id = wallachia_hre_events.1
	title = incident_emperor_deposed
	desc = incident_emperor_deposed_member_alert
	picture = HRE_eventPicture
	fire_only_once = yes
	is_triggered_only = yes
	major = yes
	immediate = {
		hidden_effect = {
			#Capture all of the AI votes using an event 1 day before the incident ends so we have some way of checking how the AI voted.
			#And before you ask, no, PDX didn't include a method of checking how the AI voted during an incident. It would've made our lives a lot easier though, wouldn't it?
			country_event = {
				id = wallachia_hre_events.2
				days = 364
			}
		}
	}
	after = {
		hidden_effect = {
			set_global_flag = had_fate_of_francia_incident
			# Add logic here to check the final vote counts and fire the appropriate result event
		}
	}
	option = {
		name = wallachia_hre_events.1.a
		add_treasury = 6969
	}
	option = {
		name = wallachia_hre_events.1.b
		add_treasury = 100000
	}
}

#Dispatcher of AI voting mechanism
country_event = {
	id = wallachia_hre_events.2
	title = AB_EMPTY
	desc = AB_EMPTY
	picture = AB_BATTLE_eventPicture
	is_triggered_only = yes
	hidden = yes
	immediate = {
		event_target:Emperor = {
			set_variable = {
				which = leave_votes
				value = 0
			}
			set_variable = {
				which = stay_votes
				value = 0
			}
		}
		every_country = {
			limit = {
				is_part_of_hre = yes
				is_emperor = no
				ai = yes
			}
			country_event = {
				id = wallachia_hre_events.3
			}
		}
	}
	option = {
		name = AB_EMPTY
	}
}

#Sneaky Way of checking how AI votes
country_event = {
	id = wallachia_hre_events.3
	title = AB_EMPTY
	desc = AB_EMPTY
	picture = GFX_wallachia_hre_events.3
	is_triggered_only = yes
	option = {
		name = AB_EMPTY
		#DISSOLVE EMPIRE
		set_variable = {
			which = dissolve_empire
			value = 1
		}
		event_target:Emperor = {
			change_variable = {
				which = leave_votes
				value = 1
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = -1
				is_emperor = yes
			}
			modifier = {
				factor = 1000
				event_target:Emperor = {
					is_bankrupt = yes
				}
			}
			modifier = {
				factor = 1000
				event_target:Emperor = {
					has_country_modifier = dishonoured_alliance
				}
			}
			modifier = {
				factor = 100
				is_heretic_hre_prince = yes
			}
			modifier = {
				factor = 100
				is_great_power = yes
			}
			modifier = {
				factor = 100
				military_strength = {
					who = event_target:Emperor
					value = 1
				}
			}
			modifier = {
				factor = 10
				NOT = {
					has_opinion = {
						who = event_target:Emperor
						value = 10
					}
				}
			}
			modifier = {
				factor = 10
				num_of_allies = 4
			}
			modifier = {
				factor = 5
				OR = {
					ai_attitude = {
						who = event_target:Emperor
						attitude = attitude_threatened
					}
					ai_attitude = {
						who = event_target:Emperor
						attitude = attitude_outraged
					}
				}
			}
			modifier = {
				factor = 3
				OR = {
					ai_attitude = {
						who = event_target:Emperor
						attitude = attitude_rivalry
					}
					ai_attitude = {
						who = event_target:Emperor
						attitude = attitude_hostile
					}
					ai_attitude = {
						who = event_target:Emperor
						attitude = attitude_threatened
					}
					ai_attitude = {
						who = event_target:Emperor
						attitude = attitude_rebellious
					}
					ai_attitude = {
						who = event_target:Emperor
						attitude = attitude_disloyal
					}
				}
			}
			modifier = {
				factor = 10
				calc_true_if = {
					all_province = {
						is_part_of_hre = yes
						OR = {
							is_claim = PREV
							is_permanent_claim = PREV
						}
					}
					amount = 10
				}
			}
			modifier = {
				factor = 20
				calc_true_if = {
					all_province = {
						is_part_of_hre = yes
						OR = {
							is_claim = PREV
							is_permanent_claim = PREV
						}
					}
					amount = 20
				}
			}
			modifier = {
				factor = 5
				has_opinion = {
					who = event_target:dude_who_deposed_emperor
					value = 100
				}
			}
			modifier = {
				factor = 15
				alliance_with = event_target:dude_who_deposed_emperor
			}
		}
	}
	option = {
		name = AB_EMPTY
		#KEEP EMPIRE
		set_variable = {
			which = dissolve_empire
			value = 0
		}
		event_target:Emperor = {
			change_variable = {
				which = stay_votes
				value = 1
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 1000
				is_emperor = yes
			}
			modifier = {
				factor = 5
				is_elector = yes
			}
			modifier = {
				factor = 10
				OR = {
					ai_attitude = {
						who = event_target:dude_who_deposed_emperor
						attitude = attitude_threatened
					}
					ai_attitude = {
						who = event_target:dude_who_deposed_emperor
						attitude = attitude_outraged
					}
				}
			}
			modifier = {
				factor = 3
				OR = {
					ai_attitude = {
						who = event_target:dude_who_deposed_emperor
						attitude = attitude_rivalry
					}
					ai_attitude = {
						who = event_target:dude_who_deposed_emperor
						attitude = attitude_hostile
					}
					ai_attitude = {
						who = event_target:dude_who_deposed_emperor
						attitude = attitude_threatened
					}
					ai_attitude = {
						who = event_target:dude_who_deposed_emperor
						attitude = attitude_rebellious
					}
					ai_attitude = {
						who = event_target:dude_who_deposed_emperor
						attitude = attitude_disloyal
					}
				}
			}
			modifier = {
				factor = 3
				has_opinion = {
					who = event_target:Emperor
					value = 100
				}
			}
			modifier = {
				factor = 5
				alliance_with = event_target:Emperor
			}
		}
	}
}
